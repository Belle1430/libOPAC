/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package opac;

import java.awt.Color;
import java.awt.Graphics;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import net.proteanit.sql.DbUtils;
import java.text.*;
import javax.swing.*;
import java.awt.PrintGraphics.*;
import java.awt.PrintJob;
import static java.awt.SystemColor.text;
import java.awt.Toolkit;
import java.awt.print.PrinterException;
import static java.lang.String.format;
import java.util.HashSet;
import java.util.Set;
import javax.swing.table.DefaultTableModel;
import java.text.MessageFormat;

/**
 *
 * @author dominic
 */
public class Books extends javax.swing.JFrame {

    /**
     * Creates new form Books
     */
    connection cn = new connection();
    connection cnn = new connection();

    public Books() {
        initComponents();

        lblcopy.setText("Copyright \u00a9 St. Cecilia's College, Inc. All Rights Reserved. ");

        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date date = new Date();
        dtepcker.setDate(date);
        dtepcker.setFormats(dateFormat);

        tta.setLineWrap(true);
        tta.setWrapStyleWord(true);

        tta1.setLineWrap(true);
        tta1.setWrapStyleWord(true);

        cbxLocSym.setSelectedIndex(-1);
        cbxYr.setSelectedIndex(-1);
        cbxStat.setSelectedIndex(-1);
        cbxFor.setSelectedIndex(-1);

        cbxFor1.setSelectedIndex(-1);
        cbxStat1.setSelectedIndex(-1);
        cbxLocSym1.setSelectedIndex(-1);
        
        txtarea.setLineWrap(true);
        txtarea.setWrapStyleWord(true);
        jScrollPane4.setBorder(null);
        
        tarealft.setLineWrap(true);
        tarealft.setWrapStyleWord(true);
        jScrollPane5.setBorder(null);
    }

    public Books(String id) {
        initComponents();
        String id1 = id;
        lbluser.setText(id1);
        
        lblcopy1.setText("Copyright \u00a9 St. Cecilia's College, Inc. All Rights Reserved. ");
        
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date date = new Date();

        cbxLocSym.setSelectedIndex(-1);
        cbxYr.setSelectedIndex(-1);
        cbxStat.setSelectedIndex(-1);

        dtepcker.setDate(date);
        dtepcker.setFormats(dateFormat);

        tta.setLineWrap(true);
        tta.setWrapStyleWord(true);

        tta1.setLineWrap(true);
        tta1.setWrapStyleWord(true);
        
        txtarea.setLineWrap(true);
        txtarea.setWrapStyleWord(true);
        jScrollPane4.setBorder(null);
        
        tarealft.setLineWrap(true);
        tarealft.setWrapStyleWord(true);
        jScrollPane5.setBorder(null);
        
        cbxFor1.setSelectedIndex(-1);
        cbxStat1.setSelectedIndex(-1);
        cbxLocSym1.setSelectedIndex(-1);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblopac = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        txtAccNo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtClassNo = new javax.swing.JTextField();
        txtVol = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTit = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtAuthNo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtEdit = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtSerTit = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtPubPlce = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtPub = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtTCAuth = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtFCAuth = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtColl = new javax.swing.JTextField();
        txtISBN = new javax.swing.JTextField();
        txtSCAuth = new javax.swing.JTextField();
        txtRem = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        cbxStat = new javax.swing.JComboBox<>();
        cbxLocSym = new javax.swing.JComboBox<>();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();
        btnfnd = new javax.swing.JButton();
        btnsav = new javax.swing.JButton();
        btnupdte = new javax.swing.JButton();
        txtCosPrce = new javax.swing.JTextField();
        cbxYr = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtAuth = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tta = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        tta1 = new javax.swing.JTextArea();
        cbxFor = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        cbxFor1 = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        cbxStat1 = new javax.swing.JComboBox<>();
        cbxLocSym1 = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        txts2 = new javax.swing.JTextField();
        txts1 = new javax.swing.JTextField();
        btnquery = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        txtcount = new javax.swing.JTextField();
        btncount = new javax.swing.JButton();
        btnprint = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        tsearch = new javax.swing.JTextField();
        bclear = new javax.swing.JButton();
        bsearch = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtarea = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        tarealft = new javax.swing.JTextArea();
        lblcard = new javax.swing.JLabel();
        lblcopy1 = new javax.swing.JLabel();
        lblcopy = new javax.swing.JLabel();
        lbluser = new javax.swing.JLabel();
        dtepcker = new org.jdesktop.swingx.JXDatePicker();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(150, 0));
        setMinimumSize(new java.awt.Dimension(1000, 721));
        setResizable(false);
        setSize(new java.awt.Dimension(1000, 721));
        getContentPane().setLayout(null);

        lblopac.setFont(new java.awt.Font("Elephant", 1, 20)); // NOI18N
        lblopac.setForeground(new java.awt.Color(255, 255, 255));
        lblopac.setText("Online Public Access Catalog");
        lblopac.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblopacMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblopacMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblopacMouseExited(evt);
            }
        });
        getContentPane().add(lblopac);
        lblopac.setBounds(160, 80, 370, 40);

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 204));
        jTabbedPane1.setForeground(new java.awt.Color(204, 0, 0));
        jTabbedPane1.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153), null, null));
        jPanel1.setForeground(new java.awt.Color(204, 0, 0));
        jPanel1.setLayout(null);
        jPanel1.add(txtAccNo);
        txtAccNo.setBounds(150, 10, 150, 30);

        jLabel7.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 0, 0));
        jLabel7.setText("Accession No:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(20, 10, 120, 30);

        jLabel8.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 0, 0));
        jLabel8.setText("Author:");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(410, 110, 70, 30);
        jPanel1.add(txtClassNo);
        txtClassNo.setBounds(780, 10, 190, 30);
        jPanel1.add(txtVol);
        txtVol.setBounds(730, 50, 240, 30);

        jLabel9.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 0, 0));
        jLabel9.setText("Co-Author:");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(20, 370, 100, 30);
        jPanel1.add(txtTit);
        txtTit.setBounds(80, 110, 320, 30);

        jLabel10.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 0, 0));
        jLabel10.setText("Co-Author:");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(340, 370, 100, 30);
        jPanel1.add(txtAuthNo);
        txtAuthNo.setBounds(120, 50, 180, 30);

        jLabel11.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 0, 0));
        jLabel11.setText("Co-Author:");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(670, 370, 100, 30);
        jPanel1.add(txtEdit);
        txtEdit.setBounds(770, 110, 200, 30);

        jLabel12.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("Author No:");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(20, 50, 90, 30);
        jPanel1.add(txtSerTit);
        txtSerTit.setBounds(130, 200, 200, 30);

        jLabel13.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 0, 0));
        jLabel13.setText("Classification No:");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(620, 10, 150, 30);

        jLabel14.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(204, 0, 0));
        jLabel14.setText("Location Symbol:");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(310, 10, 140, 30);
        jPanel1.add(txtPubPlce);
        txtPubPlce.setBounds(450, 150, 180, 30);

        jLabel15.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 51, 51));
        jLabel15.setText("Volumes:");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(620, 50, 80, 30);
        jPanel1.add(txtPub);
        txtPub.setBounds(120, 150, 160, 30);

        jLabel16.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(204, 0, 0));
        jLabel16.setText("Edition:");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(690, 110, 70, 30);

        jLabel17.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 51, 51));
        jLabel17.setText("Copyright Year:");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(310, 50, 140, 30);

        jLabel18.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(204, 0, 0));
        jLabel18.setText("Location:");
        jPanel1.add(jLabel18);
        jLabel18.setBounds(350, 200, 90, 30);

        jLabel20.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 51, 51));
        jLabel20.setText("Remarks:");
        jPanel1.add(jLabel20);
        jLabel20.setBounds(320, 410, 80, 30);
        jPanel1.add(txtTCAuth);
        txtTCAuth.setBounds(780, 370, 190, 30);

        jLabel21.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(51, 51, 51));
        jLabel21.setText("Publication Place:");
        jPanel1.add(jLabel21);
        jLabel21.setBounds(290, 150, 150, 30);
        jPanel1.add(txtFCAuth);
        txtFCAuth.setBounds(120, 370, 210, 30);

        jLabel22.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(51, 51, 51));
        jLabel22.setText("Status:");
        jPanel1.add(jLabel22);
        jLabel22.setBounds(20, 410, 70, 30);

        jLabel23.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(51, 51, 51));
        jLabel23.setText("Note Area:");
        jPanel1.add(jLabel23);
        jLabel23.setBounds(500, 270, 90, 30);

        jLabel24.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(204, 0, 0));
        jLabel24.setText("ISBN:");
        jPanel1.add(jLabel24);
        jLabel24.setBounds(710, 200, 60, 30);

        jLabel25.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(51, 51, 51));
        jLabel25.setText("Publisher:");
        jPanel1.add(jLabel25);
        jLabel25.setBounds(20, 150, 90, 30);
        jPanel1.add(txtColl);
        txtColl.setBounds(730, 150, 240, 30);
        jPanel1.add(txtISBN);
        txtISBN.setBounds(780, 200, 190, 30);
        jPanel1.add(txtSCAuth);
        txtSCAuth.setBounds(450, 370, 210, 30);
        jPanel1.add(txtRem);
        txtRem.setBounds(410, 410, 250, 30);

        jLabel26.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(51, 51, 51));
        jLabel26.setText("Cost Price:");
        jPanel1.add(jLabel26);
        jLabel26.setBounds(670, 410, 100, 30);

        jLabel28.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(204, 0, 0));
        jLabel28.setText("Series Title:");
        jPanel1.add(jLabel28);
        jLabel28.setBounds(20, 200, 100, 30);

        jLabel29.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(51, 51, 51));
        jLabel29.setText("Tracing:");
        jPanel1.add(jLabel29);
        jLabel29.setBounds(20, 270, 70, 30);

        cbxStat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "On Shelves", "Borrowed", "Lost", "Missing" }));
        jPanel1.add(cbxStat);
        cbxStat.setBounds(100, 410, 210, 30);

        cbxLocSym.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "General Reference", "Subject Reference", "Filipiniana", "Fiction", "Ebook" }));
        cbxLocSym.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxLocSymActionPerformed(evt);
            }
        });
        jPanel1.add(cbxLocSym);
        cbxLocSym.setBounds(460, 10, 150, 30);

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        jPanel1.add(jSeparator2);
        jSeparator2.setBounds(10, 190, 960, 2);

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        jPanel1.add(jSeparator3);
        jSeparator3.setBounds(20, 350, 960, 2);

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator4.setToolTipText("");
        jSeparator4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        jPanel1.add(jSeparator4);
        jSeparator4.setBounds(20, 90, 960, 2);

        jButton2.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(204, 0, 0));
        jButton2.setText("New");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(290, 470, 90, 30);

        btnfnd.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnfnd.setForeground(new java.awt.Color(204, 0, 0));
        btnfnd.setText("Find");
        btnfnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfndActionPerformed(evt);
            }
        });
        jPanel1.add(btnfnd);
        btnfnd.setBounds(400, 470, 90, 30);

        btnsav.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnsav.setForeground(new java.awt.Color(204, 0, 0));
        btnsav.setText("Save");
        btnsav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsavActionPerformed(evt);
            }
        });
        jPanel1.add(btnsav);
        btnsav.setBounds(510, 470, 90, 30);

        btnupdte.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnupdte.setForeground(new java.awt.Color(204, 0, 0));
        btnupdte.setText("Update");
        btnupdte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdteActionPerformed(evt);
            }
        });
        jPanel1.add(btnupdte);
        btnupdte.setBounds(620, 470, 90, 30);
        jPanel1.add(txtCosPrce);
        txtCosPrce.setBounds(780, 410, 190, 30);

        cbxYr.setEditable(true);
        cbxYr.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999" }));
        jPanel1.add(cbxYr);
        cbxYr.setBounds(460, 50, 150, 30);

        jLabel19.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(51, 51, 51));
        jLabel19.setText("Collation:");
        jPanel1.add(jLabel19);
        jLabel19.setBounds(640, 150, 80, 30);

        jLabel5.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 0, 0));
        jLabel5.setText("Title:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(20, 110, 50, 30);
        jPanel1.add(txtAuth);
        txtAuth.setBounds(490, 110, 190, 30);

        tta.setColumns(20);
        tta.setRows(5);
        jScrollPane2.setViewportView(tta);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(600, 240, 370, 100);

        tta1.setColumns(20);
        tta1.setRows(5);
        jScrollPane1.setViewportView(tta1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(100, 240, 390, 100);

        cbxFor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "College Library", "BED / High School Library" }));
        jPanel1.add(cbxFor);
        cbxFor.setBounds(450, 200, 210, 30);

        jTabbedPane1.addTab("Records", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setToolTipText("");
        jPanel2.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        jPanel2.add(jScrollPane3);
        jScrollPane3.setBounds(110, 220, 740, 210);

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Search by Keyword"));
        jPanel3.setLayout(null);

        jLabel27.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(204, 0, 0));
        jLabel27.setText("Location");
        jPanel3.add(jLabel27);
        jLabel27.setBounds(350, 200, 110, 30);

        cbxFor1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "College Library", "BED / High School Library" }));
        cbxFor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxFor1ActionPerformed(evt);
            }
        });
        jPanel3.add(cbxFor1);
        cbxFor1.setBounds(160, 30, 210, 30);

        jLabel30.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(204, 0, 0));
        jLabel30.setText("Location:");
        jPanel3.add(jLabel30);
        jLabel30.setBounds(70, 30, 80, 30);

        jLabel31.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(204, 0, 0));
        jLabel31.setText("Status:");
        jPanel3.add(jLabel31);
        jLabel31.setBounds(400, 80, 70, 30);

        cbxStat1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "On Shelves", "Borrowed", "Lost", "Missing" }));
        jPanel3.add(cbxStat1);
        cbxStat1.setBounds(470, 80, 150, 30);

        cbxLocSym1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "General Reference", "Subject Reference", "Filipiniana", "Fiction", "Ebook" }));
        cbxLocSym1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxLocSym1ActionPerformed(evt);
            }
        });
        jPanel3.add(cbxLocSym1);
        cbxLocSym1.setBounds(160, 80, 210, 30);

        jLabel32.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(204, 0, 0));
        jLabel32.setText("Symbol:");
        jPanel3.add(jLabel32);
        jLabel32.setBounds(70, 80, 90, 30);

        txts2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txts2ActionPerformed(evt);
            }
        });
        jPanel3.add(txts2);
        txts2.setBounds(400, 120, 220, 30);
        jPanel3.add(txts1);
        txts1.setBounds(160, 120, 210, 30);

        btnquery.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnquery.setForeground(new java.awt.Color(204, 0, 0));
        btnquery.setText("Query");
        btnquery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnqueryActionPerformed(evt);
            }
        });
        jPanel3.add(btnquery);
        btnquery.setBounds(390, 30, 110, 30);

        btnclear.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnclear.setForeground(new java.awt.Color(204, 0, 0));
        btnclear.setText("Clear");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });
        jPanel3.add(btnclear);
        btnclear.setBounds(510, 30, 110, 30);

        jPanel2.add(jPanel3);
        jPanel3.setBounds(110, 30, 740, 170);
        jPanel2.add(txtcount);
        txtcount.setBounds(690, 450, 70, 30);

        btncount.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btncount.setForeground(new java.awt.Color(204, 0, 0));
        btncount.setText("Count");
        btncount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncountActionPerformed(evt);
            }
        });
        jPanel2.add(btncount);
        btncount.setBounds(780, 450, 73, 30);

        btnprint.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        btnprint.setForeground(new java.awt.Color(204, 0, 0));
        btnprint.setText("Print");
        btnprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnprintActionPerformed(evt);
            }
        });
        jPanel2.add(btnprint);
        btnprint.setBounds(110, 450, 80, 30);

        jTabbedPane1.addTab("Inventory", jPanel2);

        jPanel4.setBackground(new java.awt.Color(255, 255, 204));
        jPanel4.setLayout(null);

        jPanel5.setBackground(new java.awt.Color(255, 255, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setLayout(null);
        jPanel5.add(tsearch);
        tsearch.setBounds(20, 20, 200, 30);

        bclear.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        bclear.setText("Clear");
        bclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bclearActionPerformed(evt);
            }
        });
        jPanel5.add(bclear);
        bclear.setBounds(340, 20, 90, 30);

        bsearch.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        bsearch.setText("Search");
        bsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsearchActionPerformed(evt);
            }
        });
        jPanel5.add(bsearch);
        bsearch.setBounds(240, 20, 90, 30);

        jPanel4.add(jPanel5);
        jPanel5.setBounds(40, 50, 440, 70);

        jPanel6.setBackground(new java.awt.Color(255, 255, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel6.setFont(new java.awt.Font("Arial Narrow", 1, 10)); // NOI18N
        jPanel6.setLayout(null);

        txtarea.setEditable(false);
        txtarea.setBackground(new java.awt.Color(255, 255, 204));
        txtarea.setColumns(20);
        txtarea.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtarea.setRows(5);
        txtarea.setBorder(null);
        jScrollPane4.setViewportView(txtarea);

        jPanel6.add(jScrollPane4);
        jScrollPane4.setBounds(230, 30, 530, 190);

        tarealft.setBackground(new java.awt.Color(255, 255, 204));
        tarealft.setColumns(20);
        tarealft.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tarealft.setRows(5);
        tarealft.setBorder(null);
        jScrollPane5.setViewportView(tarealft);

        jPanel6.add(jScrollPane5);
        jScrollPane5.setBounds(60, 30, 140, 190);

        jPanel4.add(jPanel6);
        jPanel6.setBounds(40, 160, 840, 250);

        lblcard.setFont(new java.awt.Font("Elephant", 1, 24)); // NOI18N
        lblcard.setForeground(new java.awt.Color(204, 0, 0));
        lblcard.setText("Card Catalog");
        jPanel4.add(lblcard);
        lblcard.setBounds(570, 70, 200, 31);

        lblcopy1.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        lblcopy1.setText("Copyright u00a9 St. Cecilia's College, Inc. All Rights reserved. ");
        lblcopy1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblcopy1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblcopy1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblcopy1MouseExited(evt);
            }
        });
        jPanel4.add(lblcopy1);
        lblcopy1.setBounds(280, 440, 360, 40);

        jTabbedPane1.addTab("Catalogs", jPanel4);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(0, 150, 1000, 570);

        lblcopy.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        lblcopy.setText("Copyright u00a9 St. Cecilia's College, Inc. All Rights reserved. ");
        lblcopy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblcopyMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblcopyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblcopyMouseExited(evt);
            }
        });
        getContentPane().add(lblcopy);
        lblcopy.setBounds(350, 640, 360, 40);

        lbluser.setFont(new java.awt.Font("Elephant", 0, 16)); // NOI18N
        lbluser.setText("Username");
        lbluser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbluserMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbluserMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbluserMouseExited(evt);
            }
        });
        getContentPane().add(lbluser);
        lbluser.setBounds(880, 30, 80, 20);

        dtepcker.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), null, null));
        dtepcker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dtepckerActionPerformed(evt);
            }
        });
        getContentPane().add(dtepcker);
        dtepcker.setBounds(780, 80, 200, 40);

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/opac/mnsr.jpg"))); // NOI18N
        getContentPane().add(Background);
        Background.setBounds(0, 0, 1000, 720);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblopacMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblopacMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        new Main().setVisible(true);
    }//GEN-LAST:event_lblopacMouseClicked

    private void lblopacMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblopacMouseEntered
        // TODO add your handling code here:
        this.lblopac.setForeground(Color.BLACK);
        this.lblopac.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblopacMouseEntered

    private void lblopacMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblopacMouseExited
        // TODO add your handling code here:
        this.lblopac.setForeground(Color.WHITE);
        this.lblopac.setForeground(Color.WHITE);
    }//GEN-LAST:event_lblopacMouseExited

    private void lblcopyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblcopyMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lblcopyMouseClicked

    private void lblcopyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblcopyMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lblcopyMouseEntered

    private void lblcopyMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblcopyMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lblcopyMouseExited

    private void lbluserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbluserMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_lbluserMouseClicked

    private void lbluserMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbluserMouseEntered
        // TODO add your handling code here:
        this.lbluser.setForeground(Color.WHITE);
        this.lbluser.setForeground(Color.WHITE);
    }//GEN-LAST:event_lbluserMouseEntered

    private void lbluserMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbluserMouseExited
        // TODO add your handling code here:
        this.lbluser.setForeground(Color.BLACK);
        this.lbluser.setForeground(Color.BLACK);
    }//GEN-LAST:event_lbluserMouseExited

    private void dtepckerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dtepckerActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_dtepckerActionPerformed

    private void btnupdteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdteActionPerformed
        // TODO add your handling code here:

        try {
            DateFormat sysDate = new SimpleDateFormat("yyyy-MM-dd");
            String date_to_store = sysDate.format(dtepcker.getDate());
            cn.stmt.executeUpdate("Update recordss set `AccessionNo`='" + txtAccNo.getText() + "', `LocationSymbol`='" + cbxLocSym.getSelectedItem() + "', `ClassificationNo`='" + txtClassNo.getText() + "',`AuthorNo`='" + txtAuthNo.getText() + "',`CopyrightYear`='" + cbxYr.getSelectedItem() + "', `Volumes`='" + txtVol.getText() + "', `Title`='" + txtTit.getText() + "', `Author`='" + txtAuth.getText() + "', `Edition`='" + txtEdit.getText() + "', `Publisher`='" + txtPub.getText() + "', `PublicationPlace`='" + txtPubPlce.getText() + "', `Collation`='" + txtColl.getText() + "', `SeriesTitle`='" + txtSerTit.getText() + "', `Location`='" + cbxFor.getSelectedItem() + "', `ISBN`='" + txtISBN.getText() + "', `Tracing`='" + tta1.getText() + "', `NoteArea`='" + tta.getText() + "', `FCoAuthor`='" + txtFCAuth.getText() + "', `SCoAuthor`='" + txtSCAuth.getText() + "', `TCoAuthor`='" + txtTCAuth.getText() + "', `Status`='" + cbxStat.getSelectedItem() + "', `Remarks`='" + txtRem.getText() + "', `CostPrice`='" + txtCosPrce.getText() + "', `DateReceived`='" + date_to_store + "'  where `AccessionNo`='" + txtAccNo.getText() + "' ");

            JOptionPane.showMessageDialog(null, "Item Successfully Updated");

        } catch (Exception e) {

        }
    }//GEN-LAST:event_btnupdteActionPerformed

    private void btnsavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsavActionPerformed
        // TODO add your handling code here:

        try {
            String acc = txtAccNo.getText();

            DateFormat sysDate = new SimpleDateFormat("yyyy-MM-dd");
            String date_to_store = sysDate.format(dtepcker.getDate());
            cn.rs = cn.stmt.executeQuery("SELECT * from recordss WHERE AccessionNo = '" + acc + "'");

            if (cn.rs.next() == true) {
                JOptionPane.showMessageDialog(null, "Accession No is Already Taken!!");
            } else if (txtAccNo.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Accession No is Empty");
                txtAccNo.setText("None");
            } else if (cbxLocSym.getSelectedIndex() == -1) {
                JOptionPane.showMessageDialog(null, "Location Symbol is Empty");
            } else if (txtClassNo.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Classification No is Empty");
            } else if (txtAuthNo.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Author No is Empty");
            } else if (cbxYr.getSelectedIndex() == -1) {
                JOptionPane.showMessageDialog(null, "Copyright Year  is Empty");
            } else if (txtVol.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Voume is Empty");
            } else if (txtTit.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Title is Empty");
            } else if (txtAuth.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Author is Empty");
            } else if (txtEdit.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Edition is Empty");
            } else if (txtPub.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Publisher is Empty");
            } else if (txtPubPlce.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Publication Place is Empty");
            } else if (txtColl.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Collation is Empty");
            } else if (txtSerTit.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Series Title is Empty");
            } else if (cbxFor.getSelectedIndex() == -1) {
                JOptionPane.showMessageDialog(null, "Location is Empty");
            } else if (txtISBN.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "ISBN is Empty");
            } else if (tta1.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Tracing is Empty");
            } else if (tta.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Note Area is Empty");
            } else if (txtFCAuth.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "First Co-Author is Empty");
            } else if (txtSCAuth.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Second Co-Author Place is Empty");
            } else if (txtTCAuth.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Third Co-Author is Empty");
            } else if (cbxStat.getSelectedIndex() == -1) {
                JOptionPane.showMessageDialog(null, "Status is Empty");
            } else if (txtRem.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Remarks is Empty");
            } else if (txtCosPrce.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Cost Price is Empty");
            } else {

                cn.stmt.executeUpdate("INSERT INTO recordss VALUES(null,'" + txtAccNo.getText() + "', '" + cbxLocSym.getSelectedItem() + "', '" + txtClassNo.getText() + "', '" + txtAuthNo.getText() + "', '" + cbxYr.getSelectedItem() + "', '" + txtVol.getText() + "', '" + txtTit.getText() + "', '" + txtAuth.getText() + "','" + txtEdit.getText() + "','" + txtPub.getText() + "','" + txtPubPlce.getText() + "','" + txtColl.getText() + "', '" + txtSerTit.getText() + "', '" + cbxFor.getSelectedItem() + "','" + txtISBN.getText() + "','" + tta1.getText() + "','" + tta.getText() + "', '" + txtFCAuth.getText() + "', '" + txtSCAuth.getText() + "','" + txtTCAuth.getText() + "','" + cbxStat.getSelectedItem() + "','" + txtRem.getText() + "','" + txtCosPrce.getText() + "','" + date_to_store + "')");

                JOptionPane.showMessageDialog(null, "Item Record Successfully Saved");

                btnsav.setEnabled(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnsavActionPerformed

    private void btnfndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfndActionPerformed
        // TODO add your handling code here:

        try {
            cn.rs = cn.stmt.executeQuery("SELECT * from recordss WHERE AccessionNo = '" + txtAccNo.getText() + "' ");

            if (cn.rs.next()) {

                txtAccNo.setText(cn.rs.getString("AccessionNo"));
                cbxLocSym.setSelectedItem(cn.rs.getString("LocationSymbol"));
                txtClassNo.setText(cn.rs.getString("ClassificationNo"));
                txtAuthNo.setText(cn.rs.getString("AuthorNo"));
                cbxYr.setSelectedItem(cn.rs.getString("CopyrightYear"));
                txtVol.setText(cn.rs.getString("Volumes"));
                txtTit.setText(cn.rs.getString("Title"));
                txtAuth.setText(cn.rs.getString("Author"));
                txtEdit.setText(cn.rs.getString("Edition"));
                txtPub.setText(cn.rs.getString("Publisher"));
                txtPubPlce.setText(cn.rs.getString("PublicationPlace"));
                txtColl.setText(cn.rs.getString("Collation"));
                txtSerTit.setText(cn.rs.getString("SeriesTitle"));
                cbxFor.setSelectedItem(cn.rs.getString("Location"));

                txtISBN.setText(cn.rs.getString("ISBN"));
                tta1.setText(cn.rs.getString("Tracing"));
                tta.setText(cn.rs.getString("NoteArea"));
                txtFCAuth.setText(cn.rs.getString("FCoAuthor"));
                txtSCAuth.setText(cn.rs.getString("SCoAuthor"));
                txtTCAuth.setText(cn.rs.getString("TCoAuthor"));
                cbxStat.setSelectedItem(cn.rs.getString("Status"));
                txtRem.setText(cn.rs.getString("Remarks"));
                txtCosPrce.setText(cn.rs.getString("CostPrice"));
                dtepcker.setDate(cn.rs.getDate("DateReceived"));

                btnfnd.setEnabled(false);
            } else {
                JOptionPane.showMessageDialog(null, "Not Found.....!!!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error..!!");
        }
    }//GEN-LAST:event_btnfndActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        Date date = new Date();
        dtepcker.setDate(date);

        txtAccNo.setText(null);
        cbxLocSym.setSelectedIndex(-1);
        txtClassNo.setText(null);
        txtAuthNo.setText(null);
        cbxYr.setSelectedIndex(-1);
        txtVol.setText(null);
        txtTit.setText(null);
        txtAuth.setText(null);
        txtEdit.setText(null);
        txtPub.setText(null);
        txtPubPlce.setText(null);
        txtColl.setText(null);
        txtSerTit.setText(null);
        cbxFor.setSelectedIndex(-1);
        txtISBN.setText(null);
        tta1.setText(null);
        tta.setText(null);
        txtFCAuth.setText(null);
        txtSCAuth.setText(null);
        txtTCAuth.setText(null);
        cbxStat.setSelectedIndex(-1);
        txtRem.setText(null);
        txtCosPrce.setText(null);

        btnfnd.setEnabled(true);
        btnsav.setEnabled(true);
        btnupdte.setEnabled(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cbxLocSymActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxLocSymActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxLocSymActionPerformed

    private void cbxLocSym1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxLocSym1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxLocSym1ActionPerformed

    private void txts2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txts2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txts2ActionPerformed

    private void btnqueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnqueryActionPerformed
        // TODO add your handling code here:
        String col = "College Library";
        String bed = "BED / High School Library";

        String gref = "General Reference";
        String sref = "Subject Reference";
        String fil = "Filipiniana";
        String fic = "Fiction";
        String eb = "Ebook";

        String onshel = "On Shelves";
        String bor = "Borrowed";
        String los = "Lost";
        String mis = "Missing";

        String cfor = String.valueOf(cbxFor1.getSelectedItem());
        String clocsym = String.valueOf(cbxLocSym1.getSelectedItem());
        String cstat = String.valueOf(cbxStat1.getSelectedItem());
        // location combo box  
        if (cfor.equals(col)) {

            try {
                cn.rs = cn.stmt.executeQuery("SELECT `AccessionNo`, `LocationSymbol`,`ClassificationNo`,`Title`,`Author`,`Location`,`Status` from recordss WHERE Location = '" + cbxFor1.getSelectedItem() + "'");

                jTable1.setModel(DbUtils.resultSetToTableModel(cn.rs));

            } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);

            }

        } else if (cfor.equals(bed)) {

            try {
                cn.rs = cn.stmt.executeQuery("SELECT `AccessionNo`, `LocationSymbol`,`ClassificationNo`,`Title`,`Author`,`Location`,`Status` from recordss WHERE Location = '" + cbxFor1.getSelectedItem() + "'");

                jTable1.setModel(DbUtils.resultSetToTableModel(cn.rs));

            } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);

            }

        } else {

        }
        // locationsymbol combo box  
        if (clocsym.equals(gref)) {

            try {
                cn.rs = cn.stmt.executeQuery("SELECT `AccessionNo`, `LocationSymbol`,`ClassificationNo`,`Title`,`Author`,`Location`,`Status` from recordss WHERE LocationSymbol = '" + clocsym + "'");

                jTable1.setModel(DbUtils.resultSetToTableModel(cn.rs));

            } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);

            }

        } else if (clocsym.equals(sref)) {

            try {
                cn.rs = cn.stmt.executeQuery("SELECT `AccessionNo`, `LocationSymbol`,`ClassificationNo`,`Title`,`Author`,`Location`,`Status` from recordss WHERE LocationSymbol = '" + cbxLocSym1.getSelectedItem() + "'");

                jTable1.setModel(DbUtils.resultSetToTableModel(cn.rs));

            } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);

            }

        } else if (clocsym.equals(fil)) {

            try {
                cn.rs = cn.stmt.executeQuery("SELECT `AccessionNo`, `LocationSymbol`,`ClassificationNo`,`Title`,`Author`,`Location`,`Status` from recordss WHERE LocationSymbol = '" + cbxLocSym1.getSelectedItem() + "'");

                jTable1.setModel(DbUtils.resultSetToTableModel(cn.rs));

            } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);

            }

        } else if (clocsym.equals(fic)) {

            try {
                cn.rs = cn.stmt.executeQuery("SELECT `AccessionNo`, `LocationSymbol`,`ClassificationNo`,`Title`,`Author`,`Location`,`Status` from recordss WHERE LocationSymbol = '" + cbxLocSym1.getSelectedItem() + "'");

                jTable1.setModel(DbUtils.resultSetToTableModel(cn.rs));

            } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);

            }

        } else if (clocsym.equals(eb)) {

            try {
                cn.rs = cn.stmt.executeQuery("SELECT `AccessionNo`, `LocationSymbol`,`ClassificationNo`,`Title`,`Author`,`Location`,`Status` from recordss WHERE LocationSymbol = '" + cbxLocSym1.getSelectedItem() + "'");

                jTable1.setModel(DbUtils.resultSetToTableModel(cn.rs));

            } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);

            }

        } else {

        }
        // status combo box  
        if (cstat.equals(onshel)) {

            try {
                cnn.rs = cnn.stmt.executeQuery("SELECT `AccessionNo`, `LocationSymbol`,`ClassificationNo`,`Title`,`Author`,`Location`,`Status` from recordss WHERE Status = '" + cbxStat1.getSelectedItem() + "'");

                jTable1.setModel(DbUtils.resultSetToTableModel(cnn.rs));

            } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);

            }

        } else if (cstat.equals(bor)) {

            try {
                cnn.rs = cnn.stmt.executeQuery("SELECT `AccessionNo`, `LocationSymbol`,`ClassificationNo`,`Title`,`Author`,`Location`,`Status` from recordss WHERE Status = '" + cbxStat1.getSelectedItem() + "'");

                jTable1.setModel(DbUtils.resultSetToTableModel(cnn.rs));

            } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);

            }

        } else if (cstat.equals(los)) {

            try {
                cnn.rs = cnn.stmt.executeQuery("SELECT `AccessionNo`, `LocationSymbol`,`ClassificationNo`,`Title`,`Author`,`Location`,`Status` from recordss WHERE Status = '" + cbxStat1.getSelectedItem() + "'");

                jTable1.setModel(DbUtils.resultSetToTableModel(cnn.rs));

            } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);

            }

        } else if (cstat.equals(mis)) {

            try {
                cnn.rs = cnn.stmt.executeQuery("SELECT `AccessionNo`, `LocationSymbol`,`ClassificationNo`,`Title`,`Author`,`Location`,`Status` from recordss WHERE Status = '" + cbxStat1.getSelectedItem() + "'");

                jTable1.setModel(DbUtils.resultSetToTableModel(cnn.rs));

            } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);

            }

        } else {

        }
        // locationsymbol combo box  and textboxes

        if (clocsym.equals(gref) && !txts1.getText().isEmpty() && !txts2.getText().isEmpty()) {
            try {
                cn.rs = cn.stmt.executeQuery("SELECT `AccessionNo`, `LocationSymbol`,`ClassificationNo`,`Title`,`Author`,`Location`,`Status` from recordss WHERE LocationSymbol = '" + cbxLocSym1.getSelectedItem() + "' AND ClassificationNo BETWEEN '" + txts1.getText() + "'AND '" + txts2.getText() + "' ");

                jTable1.setModel(DbUtils.resultSetToTableModel(cn.rs));

            } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);

            }

        } else if (clocsym.equals(sref) && !txts1.getText().isEmpty() && !txts2.getText().isEmpty()) {
            try {
                cn.rs = cn.stmt.executeQuery("SELECT `AccessionNo`, `LocationSymbol`,`ClassificationNo`,`Title`,`Author`,`Location`,`Status` from recordss WHERE LocationSymbol = '" + cbxLocSym1.getSelectedItem() + "' AND ClassificationNo BETWEEN '" + txts1.getText() + "'AND '" + txts2.getText() + "' ");

                jTable1.setModel(DbUtils.resultSetToTableModel(cn.rs));

            } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);

            }

        }
        if (clocsym.equals(fil) && !txts1.getText().isEmpty() && !txts2.getText().isEmpty()) {
            try {
                cn.rs = cn.stmt.executeQuery("SELECT `AccessionNo`, `LocationSymbol`,`ClassificationNo`,`Title`,`Author`,`Location`,`Status` from recordss WHERE LocationSymbol = '" + cbxLocSym1.getSelectedItem() + "' AND ClassificationNo BETWEEN '" + txts1.getText() + "'AND '" + txts2.getText() + "' ");

                jTable1.setModel(DbUtils.resultSetToTableModel(cn.rs));

            } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);

            }

        }
        if (clocsym.equals(fic) && !txts1.getText().isEmpty() && !txts2.getText().isEmpty()) {
            try {
                cn.rs = cn.stmt.executeQuery("SELECT `AccessionNo`, `LocationSymbol`,`ClassificationNo`,`Title`,`Author`,`Location`,`Status` from recordss WHERE LocationSymbol = '" + cbxLocSym1.getSelectedItem() + "' AND ClassificationNo BETWEEN '" + txts1.getText() + "'AND '" + txts2.getText() + "' ");

                jTable1.setModel(DbUtils.resultSetToTableModel(cn.rs));

            } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);

            }

        }
        if (clocsym.equals(eb) && !txts1.getText().isEmpty() && !txts2.getText().isEmpty()) {
            try {
                cn.rs = cn.stmt.executeQuery("SELECT `AccessionNo`, `LocationSymbol`,`ClassificationNo`,`Title`,`Author`,`Location`,`Status` from recordss WHERE LocationSymbol = '" + cbxLocSym1.getSelectedItem() + "' AND ClassificationNo BETWEEN '" + txts1.getText() + "'AND '" + txts2.getText() + "' ");

                jTable1.setModel(DbUtils.resultSetToTableModel(cn.rs));

            } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);

            }

        } else {

        }
        
        if (cbxFor1.getSelectedIndex() == -1 && cbxLocSym1.getSelectedIndex() == -1 && cbxStat1.getSelectedIndex() == -1) {
            try {
                cn.rs = cn.stmt.executeQuery("SELECT `AccessionNo`, `LocationSymbol`,`ClassificationNo`,`Title`,`Author`,`Location`,`Status` from recordss ");

                jTable1.setModel(DbUtils.resultSetToTableModel(cn.rs));

            } catch (SQLException ex) {
                Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);

            }
        }

    }//GEN-LAST:event_btnqueryActionPerformed

    private void btncountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncountActionPerformed
        // TODO add your handling code here:
        int rowwcount = jTable1.getRowCount();
        txtcount.setText(Integer.toString(rowwcount));
    }//GEN-LAST:event_btncountActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        // TODO add your handling code here:
        jTable1.setModel(new DefaultTableModel());
        cbxFor1.setSelectedIndex(-1);
        cbxStat1.setSelectedIndex(-1);
        cbxLocSym1.setSelectedIndex(-1);
        txts1.setText(null);
        txts2.setText(null);
        txtcount.setText(null);

    }//GEN-LAST:event_btnclearActionPerformed

    private void cbxFor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxFor1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxFor1ActionPerformed

    private void btnprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnprintActionPerformed
        // TODO add your handling code here:

        DateFormat sysDate = new SimpleDateFormat("yyyy-MM-dd");
        String date_to_store = sysDate.format(dtepcker.getDate());
       
        MessageFormat header = new MessageFormat("Date: " + date_to_store + "     " + "Total:" + txtcount.getText() );

        MessageFormat footer = new MessageFormat("Page {0, number, integer}");
        try {

            jTable1.print(JTable.PrintMode.NORMAL, header, footer);

        } catch (java.awt.print.PrinterException e) {
            JOptionPane.showMessageDialog(null, "Nothing Found");
        }

    }//GEN-LAST:event_btnprintActionPerformed

    private void bsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsearchActionPerformed
        // TODO add your handling code here:
        
        try {
            cn.rs = cn.stmt.executeQuery("SELECT * from recordss WHERE AccessionNo = '" + tsearch.getText() + "' ");

            if (cn.rs.next()) {
                
                String locs = cn.rs.getString("LocationSymbol");
                String clsno = cn.rs.getString("ClassificationNo");
                String athno = cn.rs.getString("AuthorNo");
                String copyr = cn.rs.getString("CopyrightYear");
                String accno = cn.rs.getString("AccessionNo");
                String ath = cn.rs.getString("Author");
                String tit = cn.rs.getString("Title");
                String fauth = cn.rs.getString("FCoAuthor");
                String pubplce = cn.rs.getString("PublicationPlace");
                String pub = cn.rs.getString("Publisher");
                String col = cn.rs.getString("Collation");
                String not = cn.rs.getString("NoteArea");
                String ser = cn.rs.getString("SeriesTitle");
                String isbn = cn.rs.getString("ISBN");
                String trac = cn.rs.getString("Tracing");
                
               tarealft.setText(locs + "\n" + clsno + "\n" + athno + "\n" + copyr + "\n\n\n" + accno);
                
                txtarea.setText(ath + "\n\n" +  tit + " / " + ath + ". " + fauth + ". -- " + pubplce + " : " + pub + ", c" + copyr + "\n" + col + " "+" -- "+" "+ ser + "\n\n" + not + "\n" + isbn + "\n\n" + trac);
                
                lblcard.setText("Shelflist Card");
            } else {
                JOptionPane.showMessageDialog(null, "Not Found.....!!!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error..!!");
        }
    }//GEN-LAST:event_bsearchActionPerformed

    private void bclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bclearActionPerformed
        // TODO add your handling code here:
        tsearch.setText(null);
        tarealft.setText(null);
        txtarea.setText(null);
        lblcard.setText("Card Catalog");
    }//GEN-LAST:event_bclearActionPerformed

    private void lblcopy1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblcopy1MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_lblcopy1MouseClicked

    private void lblcopy1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblcopy1MouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_lblcopy1MouseEntered

    private void lblcopy1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblcopy1MouseExited
        // TODO add your handling code here:

    }//GEN-LAST:event_lblcopy1MouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Books().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JButton bclear;
    private javax.swing.JButton bsearch;
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btncount;
    private javax.swing.JButton btnfnd;
    private javax.swing.JButton btnprint;
    private javax.swing.JButton btnquery;
    private javax.swing.JButton btnsav;
    private javax.swing.JButton btnupdte;
    private javax.swing.JComboBox<String> cbxFor;
    private javax.swing.JComboBox<String> cbxFor1;
    private javax.swing.JComboBox<String> cbxLocSym;
    private javax.swing.JComboBox<String> cbxLocSym1;
    private javax.swing.JComboBox<String> cbxStat;
    private javax.swing.JComboBox<String> cbxStat1;
    private javax.swing.JComboBox<String> cbxYr;
    private org.jdesktop.swingx.JXDatePicker dtepcker;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblcard;
    private javax.swing.JLabel lblcopy;
    private javax.swing.JLabel lblcopy1;
    private javax.swing.JLabel lblopac;
    private javax.swing.JLabel lbluser;
    private javax.swing.JTextArea tarealft;
    private javax.swing.JTextField tsearch;
    private javax.swing.JTextArea tta;
    private javax.swing.JTextArea tta1;
    private javax.swing.JTextField txtAccNo;
    private javax.swing.JTextField txtAuth;
    private javax.swing.JTextField txtAuthNo;
    private javax.swing.JTextField txtClassNo;
    private javax.swing.JTextField txtColl;
    private javax.swing.JTextField txtCosPrce;
    private javax.swing.JTextField txtEdit;
    private javax.swing.JTextField txtFCAuth;
    private javax.swing.JTextField txtISBN;
    private javax.swing.JTextField txtPub;
    private javax.swing.JTextField txtPubPlce;
    private javax.swing.JTextField txtRem;
    private javax.swing.JTextField txtSCAuth;
    private javax.swing.JTextField txtSerTit;
    private javax.swing.JTextField txtTCAuth;
    private javax.swing.JTextField txtTit;
    private javax.swing.JTextField txtVol;
    private javax.swing.JTextArea txtarea;
    private javax.swing.JTextField txtcount;
    private javax.swing.JTextField txts1;
    private javax.swing.JTextField txts2;
    // End of variables declaration//GEN-END:variables
}
